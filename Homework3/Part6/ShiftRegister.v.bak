// TCES 330, Spring 2016
// Andrew Gates
// Lab 3, Part 5
//
// TO DO

module ShiftRegister(DataIn, Shift, Clk, Q, HEX0, HEX1, HEX2, HEX3, HEX4, HEX5, HEX6, HEX7); 
   input [3:0] DataIn;        // shift IN data 
   input Shift;         // shift signal 
   input Clk;           // our clock 
   output reg [31:0] Q = 32'b0000000000000000000000000000000;      // most significant register
   output [0:6] HEX0, HEX1, HEX2, HEX3, HEX4, HEX5, HEX6, HEX7;
   
   always @( posedge Clk ) begin
      if(Shift == 0)begin
         Q <= (Q << 4);     // shift left (lose the MSbit) 
         Q[3:0] <= DataIn; // shift new data in to LSbit 
      end
      else begin
         Q <= (Q << 4);     // shift left (lose the MSbit) 
         Q[3:0] <= Q[31:28]; // shift new data in to LSbit 
      end
      
      if(DataIn == 4'b0000)
         Q <= 32'b0000000000000000000000000000000;
   end
   
   HexHELO H0(Q[3:0], HEX0);
   HexHELO H1(Q[7:4], HEX1);
   HexHELO H2(Q[11:8], HEX2);
   HexHELO H3(Q[15:12], HEX3);
   HexHELO H4(Q[19:16], HEX4);
   HexHELO H5(Q[23:20], HEX5);
   HexHELO H6(Q[27:24], HEX6);
   HexHELO H7(Q[31:28], HEX7);
   
endmodule